#!/usr/bin/env python3
"""
JSONL to Markdown Converter

This script extracts markdown content from JSONL entries generated by PageCrunchSpider
and merges them into a single markdown file with separators between each entry.

Usage:
    python jsonl_to_markdown.py input.jsonl output.md
"""

import json
import sys
import os
from datetime import datetime

def convert_jsonl_to_markdown(input_file, output_file):
    """
    Convert JSONL file to a single markdown file.
    
    Args:
        input_file (str): Path to the input JSONL file
        output_file (str): Path to the output markdown file
    """
    if not os.path.exists(input_file):
        print(f"Error: Input file '{input_file}' does not exist.")
        return False
    
    entries_count = 0
    markdown_entries = []
    
    # Read and process JSONL file
    with open(input_file, 'r', encoding='utf-8') as f:
        for line_number, line in enumerate(f, 1):
            try:
                # Parse JSON entry
                entry = json.loads(line.strip())
                
                # Check if markdown_content exists
                if 'markdown_content' not in entry:
                    print(f"Warning: No markdown_content in entry at line {line_number}, skipping.")
                    continue
                
                # Extract relevant fields
                url = entry.get('url', 'No URL')
                title = entry.get('title', 'No Title')
                markdown_content = entry.get('markdown_content', '')
                
                # Create markdown entry with front matter
                markdown_entry = f"""# {title}

*Source: {url}*

{markdown_content}
"""
                markdown_entries.append(markdown_entry)
                entries_count += 1
                
            except json.JSONDecodeError:
                print(f"Warning: Invalid JSON at line {line_number}, skipping.")
                continue
            except Exception as e:
                print(f"Error processing line {line_number}: {str(e)}")
                continue
    
    # Write to output file
    if markdown_entries:
        with open(output_file, 'w', encoding='utf-8') as f:
            # Add file header
            f.write(f"""# Combined Markdown Content
*Generated on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}*
*Total entries: {entries_count}*

""")
            
            # Write entries with separators
            separator = "\n\n---\n\n"
            f.write(separator.join(markdown_entries))
        
        print(f"Successfully converted {entries_count} entries to {output_file}")
        return True
    else:
        print("No valid markdown entries found.")
        return False

def main():
    # Check arguments
    if len(sys.argv) != 3:
        print(f"Usage: {sys.argv[0]} input.jsonl output.md")
        sys.exit(1)
    
    input_file = sys.argv[1]
    output_file = sys.argv[2]
    
    # Convert JSONL to markdown
    success = convert_jsonl_to_markdown(input_file, output_file)
    sys.exit(0 if success else 1)

if __name__ == "__main__":
    main()
